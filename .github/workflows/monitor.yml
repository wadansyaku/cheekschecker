name: Monitor calendar

on:
  schedule:
    - cron: '5/10 * * * *'
  workflow_dispatch:

concurrency:
  group: monitor-calendar
  cancel-in-progress: false

env:
  TZ: Asia/Tokyo
  NOTIFY_MODE: 'newly'
  NOTIFY_FROM_TODAY: '1'
  PING_CHANNEL: '1'
  COOLDOWN_MINUTES: '180'
  BONUS_SINGLE_DELTA: '2'
  BONUS_RATIO_THRESHOLD: '0.50'
  ROBOTS_ENFORCE: '1'
  MASK_LEVEL: '1'
  ROLLOVER_HOURS_JSON: '{"Sun":2,"Mon":0,"Tue":5,"Wed":5,"Thu":5,"Fri":6,"Sat":6}'
  UA_CONTACT: 'mailto:example@example.com'

jobs:
  monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Display trigger info
        run: echo "trigger=${{ github.event_name }} ref=${{ github.ref }} sha=${{ github.sha }}"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Restore Playwright cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install --with-deps chromium

      - name: Run monitor (scheduled)
        if: github.event_name != 'workflow_dispatch'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: python watch_cheeks.py monitor

      - name: Run monitor with sanitized artifact
        if: github.event_name == 'workflow_dispatch'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: python watch_cheeks.py monitor --sanitized-output fetched_table_sanitized.html

      - name: Upload sanitized table
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: sanitized-table
          path: fetched_table_sanitized.html
          if-no-files-found: ignore
          retention-days: 3

      - name: Upload masked history snapshot
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: masked-history
          path: history_masked.json
          if-no-files-found: ignore
          retention-days: 3

  notify-failure:
    runs-on: ubuntu-latest
    needs: monitor
    if: failure()
    steps:
      - name: Notify Slack on failure
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ -n "$SLACK_WEBHOOK_URL" ]; then
            curl -X POST "$SLACK_WEBHOOK_URL" \
              -H 'Content-Type: application/json' \
              -d "{
                \"text\": \"❌ Workflow Failed: Monitor Calendar\",
                \"blocks\": [{
                  \"type\": \"header\",
                  \"text\": {
                    \"type\": \"plain_text\",
                    \"text\": \"❌ Workflow Failed\",
                    \"emoji\": false
                  }
                }, {
                  \"type\": \"section\",
                  \"text\": {
                    \"type\": \"mrkdwn\",
                    \"text\": \"*Workflow:* Monitor Calendar\\n*Branch:* \`${{ github.ref_name }}\`\\n*Trigger:* ${{ github.event_name }}\"
                  }
                }, {
                  \"type\": \"actions\",
                  \"elements\": [{
                    \"type\": \"button\",
                    \"text\": {
                      \"type\": \"plain_text\",
                      \"text\": \"View Logs\"
                    },
                    \"url\": \"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"
                  }]
                }]
              }"
          fi
